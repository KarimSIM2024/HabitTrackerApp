import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:habit_trackerr/core/layout/controller/cubit.dart';
import 'package:habit_trackerr/core/layout/controller/state.dart';
import 'package:hexcolor/hexcolor.dart';

import 'editdialog.dart';

class BuildItemHome extends StatelessWidget {
  final Map model;

  const BuildItemHome({super.key, required this.model});

  @override
  Widget build(BuildContext context) {
    return BlocConsumer<HabitCubit, HabitState>(
      listener: (context, state) {},
      builder: (context, state) {
        var habit = HabitCubit.get(context);
        return Padding(
          padding: const EdgeInsets.only(right: 20.0),
          child: Container(
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular(15.0),
              color: HexColor('#F7FBFF'),
              border: Border.all(color: HexColor('#00468C')),
            ),
            child: Padding(
              padding: const EdgeInsets.all(8.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    model['title'].toString(),
                    style: TextStyle(
                      color: HexColor('#00468C'),
                      fontSize: 20.0,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  SizedBox(height: 10.0),
                  Text(
                    model['description'].toString(),
                    style: TextStyle(
                      color: HexColor('#4B7DAF'),
                      fontSize: 20.0,
                    ),
                  ),
                  SizedBox(height: 10.0),
                  Row(
                    children: [
                      Expanded(
                        child: Text(
                          model['category'].toString(),
                          style: TextStyle(
                            color: getCategoryColor(
                              model['category'].toString(),
                            ),
                            fontSize: 20.0,
                          ),
                          overflow: TextOverflow.ellipsis,
                          // Add overflow handling
                          maxLines: 2,
                        ),
                      ),
                      Spacer(),
                      IconButton(
                        onPressed: () {
                          String state = model['state'];
                          habit.updateStateDB(
                            id: model['id'],
                            state: (state == 'Yes') ? 'No' : 'Yes',
                          );
                        },
                        icon: Icon(
                          model['state'] == 'Yes'
                              ? Icons.check_circle
                              : Icons.check_circle_outlined,
                          color: Colors.green,
                          size: 30.0,
                        ),
                      ),
                      IconButton(
                        onPressed: () {
                          showDialog(context: context, builder: builder)
                        },
                        icon: Icon(
                          Icons.edit_outlined,
                          color: Colors.blue,
                          size: 30.0,
                        ),
                      ),
                      IconButton(
                        onPressed: () {
                          habit.deleteDB(id: model['id']);
                        },
                        icon: Icon(
                          Icons.delete_outline,
                          color: Colors.red,
                          size: 30.0,
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ),
        );
      },
    );
  }
}

Color getCategoryColor(String category) {
  if (category == 'Urgent & Important') {
    return Colors.red;
  } else if (category == 'Not Urgent & Important') {
    return Colors.orange;
  } else if (category == 'Urgent & Unimportant') {
    return Colors.blue;
  } else {
    return Colors.green;
  }
}
